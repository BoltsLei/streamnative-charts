#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# deploy zookeeper only when `components.zookeeper` is true
{{- if .Values.components.zookeeper }}
{{- if or .Values.zookeeper.operator.enabled .Values.zookeeper.operator.adopt_existing }}
apiVersion: zookeeper.streamnative.io/v1alpha1
kind: ZooKeeperCluster
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/ignore-leader-check": "true"
    "cloud.streamnative.io/cluster-force-update": "true"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.zookeeper.component }}
spec:
  replicas: {{ .Values.zookeeper.replicaCount }}
  image: "{{ .Values.images.zookeeper.repository }}:{{ .Values.images.zookeeper.tag }}"
  {{- if and .Values.volumes.persistence .Values.zookeeper.volumes.persistence }}
  persistence:
    data:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.zookeeper.volumes.data.size }}
    {{- if .Values.zookeeper.volumes.useSeparateDiskForTxlog }}
    dataLog:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.zookeeper.volumes.dataLog.size }}
    {{- end }}
    reclaimPolicy: Delete
  {{- end }}
  config:
    # copy from configmap
    custom:
      dataDir: /pulsar/data/zookeeper
      {{- if .Values.zookeeper.volumes.useSeparateDiskForTxlog }}
      # use a seperate disk for tx log
      PULSAR_PREFIX_dataLogDir: /pulsar/data/zookeeper-datalog
      {{- end }}
      PULSAR_PREFIX_serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
      serverCnxnFactory: org.apache.zookeeper.server.NettyServerCnxnFactory
      # enable zookeeper tls
      {{- if and .Values.tls.enabled .Values.tls.zookeeper.enabled }}
      secureClientPort: "{{ .Values.zookeeper.ports.clientTls }}"
      PULSAR_PREFIX_secureClientPort: "{{ .Values.zookeeper.ports.clientTls }}"
      {{- end }}
      {{- if .Values.zookeeper.reconfig.enabled }}
      PULSAR_PREFIX_reconfigEnabled: "true"
      PULSAR_PREFIX_quorumListenOnAllIPs: "true"
      {{- end }}
      PULSAR_PREFIX_peerType: {{ .Values.zookeeper.peerType }}
{{ toYaml .Values.zookeeper.configData | indent 6 }}
      # Include log configuration file, If you want to configure the log level and other configuration
      # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf
{{ (.Files.Glob "conf/zookeeper/log4j2.yaml").AsConfig | indent 6 }}
  apiObjects:
    clientService: {}
    headlessService:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.component }}"
      updatePolicy:
      - all
    statefulSet:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.component }}"
      updatePolicy:
      - updateStrategy
    configMap:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.component }}"
      updatePolicy:
      - all
    pdb:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.component }}"
      updatePolicy:
      - all
{{- end }}
{{- end }}
